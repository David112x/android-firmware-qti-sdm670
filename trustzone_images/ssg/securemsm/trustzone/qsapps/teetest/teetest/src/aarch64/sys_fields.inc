; From securemsm/trustzone/armlib/v8/inc/

; MPIDR
.set MPIDR_EL1_AFF0_MSK, 0x000000FF
.set MPIDR_EL1_AFF0_SHFT, 0x0
.set MPIDR_EL1_AFF1_MSK, 0x0000FF00
.set MPIDR_EL1_AFF1_SHFT, 0x8
.set MPIDR_EL1_AFF2_MSK, 0x00FF0000
.set MPIDR_EL1_AFF2_SHFT, 0x10
.set MPIDR_EL1_MT_MSK, 0x01000000
.set MPIDR_EL1_MT_SHFT, 0x18
.set MPIDR_EL1_AFF_LENGTH, 0x8

; SPSR
; CPSR Processing Modes M[4:0] (CPSR[M]) bits
.set SPSR_MODE_EL0t, 0x000
.set SPSR_MODE_EL1t, 0x004 ; SP_EL0
.set SPSR_MODE_EL1h, 0x005 ; SP_EL1
.set SPSR_MODE_EL2t, 0x008 ; SP_EL0
.set SPSR_MODE_EL2h, 0x009 ; SP_EL2
.set SPSR_MODE_EL3t, 0x00C ; SP_EL0
.set SPSR_MODE_EL3h, 0x00D ; SP_EL3
.set SPSR_MODE_MSK, 0x00F
.set SPSR_MODE_SHFT, 0x000
.set SPSR_A_BIT, 0x100
.set SPSR_I_BIT, 0x080
.set SPSR_F_BIT, 0x040
.set DFLT_A64_S_EL1_SPSR, SPSR_MODE_EL1h | SPSR_I_BIT | SPSR_F_BIT | SPSR_A_BIT
.set DFLT_A64_NS_EL1_SPSR, SPSR_MODE_EL1h | SPSR_I_BIT | SPSR_F_BIT | SPSR_A_BIT

.set SPSR_32_MODE_USR, 0x000
.set SPSR_32_MODE_FIQ, 0x001
.set SPSR_32_MODE_IRQ, 0x002
.set SPSR_32_MODE_SVC, 0x003
.set SPSR_32_MODE_MON, 0x006
.set SPSR_32_MODE_ABT, 0x007
.set SPSR_32_MODE_HYP, 0x00A
.set SPSR_32_MODE_UND, 0x00B
.set SPSR_32_MODE_SYS, 0x00F
.set SPSR_32_M_BIT, 0x010   ; RW of exception
.set SPSR_32_T_BIT, 0x020   ; Thumb execution state bit
.set SPSR_32_F_BIT, 0x040   ; FIQ mask bit
.set SPSR_32_I_BIT, 0x080   ; IRQ mask bit
.set SPSR_32_A_BIT, 0x100   ; SError mask bit
.set SPSR_32_D_BIT, 0x200   ; Debug exception mask bit



; DAIF bits
.set DAIF_D_BIT, 0x200   ; Debug exception mask bit
.set DAIF_A_BIT, 0x100   ; SError mask bit
.set DAIF_I_BIT, 0x080   ; IRQ mask bit
.set DAIF_F_BIT, 0x040   ; FIQ mask bit

.set DAIFSET_D_BIT, 0x08    ; Debug exception mask bit
.set DAIFSET_A_BIT, 0x04    ; SError mask bit
.set DAIFSET_I_BIT, 0x02    ; IRQ mask bit
.set DAIFSET_F_BIT, 0x01    ; FIQ mask bit

; SCR (Secure Configuration Register) bits
.set SCR_NS_BIT, 0x001   ; Non-Secure (NS) bit
.set SCR_IRQ_BIT, 0x002   ; IRQ bit
.set SCR_FIQ_BIT, 0x004   ; FIQ bit
.set SCR_EA_BIT, 0x008   ; EA bit
.set SCR_AW_BIT, 0x020   ; A Bit writable (AW) bit
.set SCR_SMD_BIT, 0x040   ; Disables SMC
.set SCR_HCE_BIT, 0x100   ; Enables HVC
.set SCR_SIF_BIT, 0x200   ; Enforce secure instruction fetch
.set SCR_RW_BIT, 0x400   ; Register width for lower EL
.set SCR_ST_BIT, 0x800   ; Register width for lower EL
.set SCR_EL3_DEFAULT, SCR_SIF_BIT | SCR_RW_BIT | SCR_ST_BIT


; HCR (Hypervisor Configuration Register) bits
.set HCR_RW_BIT, 0x80000000  ; Register width for lower EL

; SCTLR_EL1 bits
.set SCTLR_EL1_M_BIT, 0x00000001
.set SCTLR_EL1_A_BIT, 0x00000002
.set SCTLR_EL1_C_BIT, 0x00000004
.set SCTLR_EL1_C_SHFT, 0x2
.set SCTLR_EL1_CP15BEN_BIT, 0x00000020
.set SCTLR_EL1_THEE_BIT, 0x00000040
.set SCTLR_EL1_ITD_BIT, 0x00000080
.set SCTLR_EL1_SED_BIT, 0x00000100
.set SCTLR_EL1_I_BIT, 0x00001000
.set SCTLR_EL1_I_SHFT, 0xC
.set SCTLR_EL1_V_BIT, 0x00002000
.set SCTLR_EL1_NTWI_BIT, 0x00010000
.set SCTLR_EL1_NTWE_BIT, 0x00040000
.set SCTLR_EL1_WXN_BIT, 0x00080000
.set SCTLR_EL1_UWXN_BIT, 0x00100000
.set SCTLR_EL1_EE_BIT, 0x02000000
.set SCTLR_EL1_TRE_BIT, 0x10000000
.set SCTRL_EL1_AFE_BIT, 0x20000000
.set SCTLR_EL1_TE_BIT, 0x40000000
#if defined(TZBSP_WITH_TEST_SVC)
.set SCTLR_EL1_DEFAULT      , SCTLR_EL1_M_BIT | SCTLR_EL1_C_BIT | SCTLR_EL1_I_BIT
#else
.set SCTLR_EL1_DEFAULT      , SCTLR_EL1_M_BIT | SCTLR_EL1_C_BIT | SCTLR_EL1_I_BIT | SCTLR_EL1_WXN_BIT
#endif

; SCTLR_EL3 bits
.set SCTLR_EL3_M_BIT, 0x00000001
.set SCTLR_EL3_A_BIT, 0x00000002
.set SCTLR_EL3_A_SHFT, 0x1
.set SCTLR_EL3_C_BIT, 0x00000004
.set SCTLR_EL3_C_SHFT, 0x2
.set SCTLR_EL3_SA_BIT, 0x00000008
.set SCTLR_EL3_SA_SHFT, 0x3
.set SCTLR_EL3_I_BIT, 0x00001000
.set SCTLR_EL3_I_SHFT, 0xC
.set SCTLR_EL3_WXN_BIT, 0x00080000
.set SCTLR_EL3_WXN_SHFT, 0x13
.set SCTLR_EL3_EE_BIT, 0x02000000
.set SCTLR_EL3_EE_SHFT, 0x19
.set SCTLR_EL3_BMSK, SCTLR_EL3_M_BIT | SCTLR_EL3_A_BIT | SCTLR_EL3_C_BIT | SCTLR_EL3_SA_BIT | SCTLR_EL3_I_BIT | SCTLR_EL3_WXN_BIT | SCTLR_EL3_EE_BIT
#if defined(TZBSP_WITH_TEST_SVC)
.set SCTLR_EL3_DEFAULT, SCTLR_EL3_M_BIT | SCTLR_EL3_C_BIT | SCTLR_EL3_I_BIT
#else
.set SCTLR_EL3_DEFAULT, SCTLR_EL3_M_BIT | SCTLR_EL3_C_BIT | SCTLR_EL3_I_BIT | SCTLR_EL3_WXN_BIT
#endif

; CTR_EL0 bits

; CLIDR_EL1 bits
.set CLIDR_LOUIS_MSK, 0x00E00000
.set CLIDR_LOUIS_SHFT, 21
.set CLIDR_LOC_MSK, 0x07000000
.set CLIDR_LOC_SHFT, 24
.set CLIDR_CTYPE_MSK, 0x00000007

.set CLIDR_CTYPE_NO_CACHE, 0
.set CLIDR_CTYPE_I_ONLY, 1
.set CLIDR_CTYPE_D_ONLY, 2
.set CLIDR_CTYPE_I_AND_D, 3
.set CLIDR_CTYPE_UNIFIED, 4

; CSSELR_EL1 bits

; CCSIDR_EL1 bits
.set CCSIDR_LINE_SZ_BMSK, 0x7
.set CCSIDR_LINE_SZ_OFFST, 0x4
.set CCSIDR_NUM_WAYS_BITS, 10
.set CCSIDR_NUM_WAYS_SHFT, 3
.set CCSIDR_NUM_SETS_BITS, 15
.set CCSIDR_NUM_SETS_SHFT, 13

; ESR_EL3 bits
.set ESR_EL3_EC_UNKNOWN, 0x00
.set ESR_EL3_EC_WFE_WFI, 0x01
.set ESR_EL3_EC_CP15_ACCESS, 0x03
.set ESR_EL3_EC_CP14_ACCESS, 0x05
.set ESR_EL3_EC_CP14_ACCESS_2, 0x06
.set ESR_EL3_EC_SIMD_FP, 0x07
.set ESR_EL3_EC_CP14_ACCESS_3, 0x0C
.set ESR_EL3_EC_IL, 0x0E
.set ESR_EL3_EC_SMC_32, 0x13
.set ESR_EL3_EC_SVC_64, 0x15
.set ESR_EL3_EC_HVC_64, 0x16
.set ESR_EL3_EC_SMC_64, 0x17
.set ESR_EL3_EC_SYSREG_64, 0x18
.set ESR_EL3_EC_I_ABORT_LOWER_EL, 0x20
.set ESR_EL3_EC_I_ABORT_THIS_EL, 0x21
.set ESR_EL3_EC_PC_ALIGNMENT, 0x22
.set ESR_EL3_EC_D_ABORT_LOWER_EL, 0x24
.set ESR_EL3_EC_D_ABORT_THIS_EL, 0x25
.set ESR_EL3_EC_SP_ALIGNMENT, 0x26
.set ESR_EL3_EC_FP_EXCEPTION, 0x2C
.set ESR_EL3_EC_SERROR_INT, 0x2F
.set ESR_EL3_EC_BRK_64, 0x3C
.set ESR_EL3_EC_SHFT, 26
.set ESR_EL3_EC_BMSK, 0x3F
.set ESR_EL3_EC_LENGTH, 0x6

.set PAR_EL1_F_BIT, 0x1
.set PAR_EL1_PA_BITS_SHFT, 0xC
.set PAR_EL1_PA_BITS_SIZE, 0x24

.set ESR_EL1_EC_UNKNOWN, 0x00
.set ESR_EL1_EC_WFE_WFI, 0x01
.set ESR_EL1_EC_MCR_MRC_CP15, 0x03
.set ESR_EL1_EC_MCRR_MRRC_CP15, 0x04
.set ESR_EL1_EC_MCR_MRC_CP14, 0x05
.set ESR_EL1_EC_LDC_STC_CP14, 0x06
.set ESR_EL1_EC_SIMD_FP, 0x07
.set ESR_EL1_EC_MRC_CP10, 0x08
.set ESR_EL1_EC_MCRR_MRRC_CP14, 0x0C
.set ESR_EL1_EC_PSTATE, 0x0E
.set ESR_EL1_EC_SVC_32, 0x11
.set ESR_EL1_EC_HVC_32, 0x12
.set ESR_EL1_EC_SMC_32, 0x13
.set ESR_EL1_EC_SVC_64, 0x15
.set ESR_EL1_EC_HVC_64, 0x16
.set ESR_EL1_EC_SMC_64, 0x17
.set ESR_EL1_EC_MSR_MRS_64, 0x18
.set ESR_EL1_EC_I_ABORT_LOWER_EL, 0x20
.set ESR_EL1_EC_I_ABORT_THIS_EL, 0x21
.set ESR_EL1_EC_PC_ALIGNMENT, 0x22
.set ESR_EL1_EC_D_ABORT_LOWER_EL, 0x24
.set ESR_EL1_EC_D_ABORT_THIS_EL, 0x25
.set ESR_EL1_EC_SP_ALIGNMENT, 0x26
.set ESR_EL1_EC_FP_EXCEPTION_32, 0x28
.set ESR_EL1_EC_FP_EXCEPTION_64, 0x2C
.set ESR_EL1_EC_SERROR_INT, 0x2F

.set ESR_EL1_EC_SHFT, 26
.set ESR_EL1_EC_BMSK, 0x3F
.set ESR_EL1_EC_LENGTH, 0x6
