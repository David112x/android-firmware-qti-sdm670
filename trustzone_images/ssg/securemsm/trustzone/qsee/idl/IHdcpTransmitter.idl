// Copyright (c) 2017 Qualcomm Technologies, Inc.  All Rights Reserved.
// Qualcomm Technologies Proprietary and Confidential.

include "IOPS.idl"

/**
 * @brief
 * IHdcpTransmitter - APIs be called by the HDCP Transmitter applications
 * to report the HDCP encryption level and the downstream device topology.
 * By implementing these APIs Output Protection Service keeps track of
 * all HDCP Transmitters and their topologies
 */
interface IHdcpTransmitter {

  /** error codes */

  /** Revoked devices found in downstream topology */
  error ERROR_SRM_CHECK_FAILED;

  /** Topology validation failed */
  error ERROR_TOPOLOGY_INVALID;

  /**
   * Set HDCP Topology for a device
   *
   * @param [in] receiverIdList - downstream deviceid list
   * @param [in] hdcpTopology - device topology information
   */
  method setDeviceTopology(in uint8[] receiverIdList,
                           in HdcpTopology hdcpToplogy);
  /**
   * Set the HDCP encryption level supported by the display device
   * This API should be called by wireless HDCP Transmitters
   *
   * @param [in] dpl - HDCP encryption level for the device
   */
  method setDeviceProtectionLevel(in uint8 dpl);

  /**
   * This API should be called by Hdcp Transmitter TAs to update Output
   * Protection Service with the new Content Protection Level
   *
   * Whenever content's protection level changes, OPS ensures that the
   * new level has been honored by HDCP Transmitter by receiving this update.
   * If this update is not received within a time limit a error will be
   * notified to HDCP TX through IHdcpNotify
   *
   * @param [in] cpl - new content protection level
   */
  method contentProtectionLevelUpdated(in uint8 cpl);
};
