// Copyright (c) 2017-2018 Qualcomm Technologies, Inc.  All Rights Reserved.
// Qualcomm Technologies Proprietary and Confidential.

interface IAppController {

  /**
   * Error codes
   */
  error ERROR_APP_SUSPENDED;           /**< App suspended/terminated, cannot receive commands */
  error ERROR_APP_BLOCKED_ON_LISTENER; /**< App blocked on a listener call */
  error ERROR_APP_UNLOADED;            /**< App has been unloaded */
  error ERROR_APP_IN_USE;              /**< App busy processing another command */

  /**
   * @brief Open a session with the secure application.
   * This method is part of the GP interface for the TA.
   *
   * The content of the 4 input/output buffers is manually marshalled by the
   * caller/implementer depending on the type of the parameter.
   *
   * @param[in]  wait               Optional object to wait-on for cancellations.
   * @param[in]  paramTypes         Types of the 4 parameters, 1 byte per parameter.
   * @param[in]  i1                 First input buffer.
   * @param[in]  i2                 Second input buffer.
   * @param[in]  i3                 Third input buffer.
   * @param[in]  i4                 Fourth input buffer.
   * @param[out] o1                 First output buffer.
   * @param[out] o2                 Second output buffer.
   * @param[out] o3                 Third output buffer.
   * @param[out] o4                 Fourth output buffer.
   * @param[in]  imem1              First optional memory region.
   * @param[in]  imem2              Second optional memory region.
   * @param[in]  imem3              Third optional memory region.
   * @param[in]  imem4              Fourth optional memory region.
   * @param[out] session            Newly opened session.
   * @param[out] retValue           GP return value.
   * @param[out] retOrigin          Where the GP return value originated.
   *
   * @return  Object_OK if successful.
   */
  method openSession(in interface wait,
                     in uint32 paramTypes,
                     in buffer i1,
                     in buffer i2,
                     in buffer i3,
                     in buffer i4,
                     out buffer o1,
                     out buffer o2,
                     out buffer o3,
                     out buffer o4,
                     in interface imem1,
                     in interface imem2,
                     in interface imem3,
                     in interface imem4,
                     out interface session,
                     out uint32 retValue,
                     out uint32 retOrigin);

  /**
   * @brief Unload the secure application.
   * This function will fail if the application is currently busy. The caller is
   * expected to try again at a later time.
   *
   * @return  Object_OK if successful.
   */
  method unload();

  /**
   * @brief Get the object implementing the App-provided functionalities.
   *
   * @param[out] obj          Returned object.
   *
   * @return  Object_OK on success.
   */
  method getAppObject(out interface obj);

  /**
   * @brief Install a service provided by the client.
   *
   * Refer to the IApp definition for a list of supported services a client can provide.
   *
   * @param[in] serviceType   Service type
   * @param[in] obj           Object implementing the service
   *
   * @return  Object_OK on success.
   */
  method installService(in uint32 serviceType, in interface obj);
};
