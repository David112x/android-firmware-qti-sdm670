// Copyright (c) 2017 Qualcomm Technologies, Inc.  All Rights
// Reserved.  Qualcomm Technologies Proprietary and Confidential.

struct IRTICReport_reportHeader
{
  uint64 reportVersion;     /**<Version of the EL2 report.*/
  uint64 mpCatalogVersion;  /**<Version of MP catalogue used for kernel protection.*/
  uint64 numIncidents;      /**<Number of Incidents Observed by EL2. */  
  uint8 protectionEnabled;  /**<Kernel Assets protected by EL2. */
  uint8 pad1;               /**<Padding */
  uint8 pad2;               /**<Padding */
  uint8 pad3;               /**<Padding */
  uint32 pad4;              /**<Padding */
};

struct IRTICReport_reportData
{
  uint64 sequenceNumber;   /**<Sequence number of the report.*/   
  uint64 actor;            /**<Actor that caused the Incident. Could be process ID.*/
  uint8 reportValid;       /**<Flag to indicate whether report instance is valid.*/
  uint8 reportType;        /**<Report Type: of type el2_report_t.*/
  uint8 assetCategory;     /**<Asset Category of type asset_category_t.*/
  uint8 response;          /**<Respnse From EL2 of type el2_response_t.*/  
  uint32 pad1;
  //uint8 assetId[0x20];     /**<Asset Identifier, could be Name.*/
};

interface IRTICReport {

  /**
   * Specifies the type of the response.
   */

  const uint32 RESPONSE_ALLOW     = 0;
  const uint32 RESPONSE_RESTRICT  = 1;
  
  /**
   * Specifies the type of the report.
   */

  const uint32 REPORT_INFO      = 0;
  const uint32 REPORT_INCIDENT  = 1;  
  
  /**
   * Specifies the Category of the asset.
   */

  const uint32 ASSET_RO_DATA                 = 0;
  const uint32 ASSET_RO_TEXT                 = 1;  
  const uint32 ASSET_WRITE_ONCE_VALUE_KNOWN  = 2;
  const uint32 ASSET_WRITE_ONCE_VALUE_UNKNOW = 3; 
  const uint32 ASSET_BLACK_LISTED            = 4;
  const uint32 ASSET_PAGE_TABLE              = 5; 
  
  /**
   * Retrieve Reports Header that is generated by EL2.
   *
   * @param[out] reportheader         The output Report Header Structure.   
   * @note This API will return contents of the Report Header.
   *
   * @return Object_OK on success.
   */
  method getReportHeader(out IRTICReport_reportHeader reportheader);
  
  /**
   * Retrieve the next individual Report that is generated by EL2.
   *
   * @param[out] report         The output Report Header Structure. 
   * @note This API will return the contents of the next unread report, if available.
   *
   * @return Object_OK on success.
   */
  method getReport(out IRTICReport_reportData report);  
};
