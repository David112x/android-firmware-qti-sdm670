// Copyright (c) 2018 Qualcomm Technologies, Inc.  All Rights Reserved.
// Qualcomm Technologies Proprietary and Confidential.


// Interface used to call back from commonlib into applib for the GP TA entry points
interface IGPEntryPoints {

  /**
   * @brief Call the TA's implementation of TA_CreateEntryPoint()
   *
   * @param[out] result - Return value given by TA_CreateEntryPoint().
   *
   * @return  Object_OK if successful.
   */
  method create(out uint32 result);

  /**
   * @brief Call the TA's implementation of TA_DestroyEntryPoint()
   *
   * @return  Object_OK if successful.
   */
  method destroy();

  /**
   * @brief Call the TA's implementation of TA_OpenSessionEntryPoint()
   *
   * @param[in]  paramTypes                      Types of the 4 parameters, 1 byte per parameter.
   * @param[in]  params                          Address of the array of 4 TEE_Params.
   * @param[out] sessionContext                  Pointer to the session context.
   * @param[out] retValue                        GP return value.
   *
   * @return  Object_OK if successful.
   */
  method openSession(in uint32 paramTypes,
                     in uint64 params,
                     out uint64 sessionContext,
                     out uint32 retValue);

  /**
   * @brief Call the TA's implementation of TA_InvokeCommandEntryPoint()
   *
   * @param[in]  sessionContext                  Address of the session context.
   * @param[in]  commandID                       Numeric code for the command.
   * @param[in]  paramTypes                      Types of the 4 parameters, 1 byte per parameter.
   * @param[in]  params                          Address of the array of 4 TEE_Params.
   * @param[out] retValue                        GP return value.
   *
   * @return  Object_OK if successful.
   */
  method invokeCommand(in uint64 sessionContext,
                       in uint32 commandID,
                       in uint32 paramTypes,
                       in uint64 params,
                       out uint32 retValue);

  /**
   * @brief Call the TA's implementation of TA_CloseSessionEntryPoint()
   *
   * @param[in]  sessionContext                  Address of the session context.
   *
   * @return  Object_OK if successful.
   */
  method closeSession(in uint64 sessionContext);
};
