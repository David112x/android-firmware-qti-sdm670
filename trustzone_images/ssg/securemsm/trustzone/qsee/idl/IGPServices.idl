// Copyright (c) 2015-2018 Qualcomm Technologies, Inc.  All Rights Reserved.
// Qualcomm Technologies Proprietary and Confidential.

// Interface representing a GP session with a TA
interface IGPSession {

  /**
   * Error codes
   */
  error ERROR_CLOSED;                            /**< Session was closed */

  /**
   * @brief Close the session.
   *
   * @return Object_OK on success.
   */
  method close();

  /**
   * @brief Invoke a command on an open GP Session.
   *
   * The content of the 4 input/output buffers is manually marshalled by the
   * caller/implementer depending on the type of the parameter.
   *
   * @param[in]  commandID                       Numeric code for the command.
   * @param[in]  wait                            Optional object to wait-on for cancellations.
   * @param[in]  cancellationRequestTimeout      Timeout for automatic request cancellation.
   * @param[in]  paramTypes                      Types of the 4 parameters, 1 byte per parameter.
   * @param[in]  i1                              First input buffer.
   * @param[in]  i2                              Second input buffer.
   * @param[in]  i3                              Third input buffer.
   * @param[in]  i4                              Fourth input buffer.
   * @param[out] o1                              First output buffer.
   * @param[out] o2                              Second output buffer.
   * @param[out] o3                              Third output buffer.
   * @param[out] o4                              Fourth output buffer.
   * @param[in]  imem1                           First optional memory region.
   * @param[in]  imem2                           Second optional memory region.
   * @param[in]  imem3                           Third optional memory region.
   * @param[in]  imem4                           Fourth optional memory region.
   * @param[out] retValue                        GP return value.
   * @param[out] retOrigin                       Where the GP return value originated.
   *
   * @return  Object_OK if successful.
   */
  method invokeCommand(in uint32 commandID,
                       in interface wait,
                       in uint32 cancellationRequestTimeout,
                       in uint32 paramTypes,
                       in buffer i1,
                       in buffer i2,
                       in buffer i3,
                       in buffer i4,
                       out buffer o1,
                       out buffer o2,
                       out buffer o3,
                       out buffer o4,
                       in interface imem1,
                       in interface imem2,
                       in interface imem3,
                       in interface imem4,
                       out uint32 retValue,
                       out uint32 retOrigin);

};


// Kernel interface to open a session with a TA, identified by its UUID

interface IGP {

  /**
   * Error codes
   */
  error ERROR_INVALID_UUID_LEN;        /**< UUID length is invalid */

  /**
   * @brief Open a session with the secure application specified in the UUID.
   * This method is part of the GP interface for TA to TA communication.
   *
   * The content of the 4 input/output buffers is manually marshalled by the
   * caller/implementer depending on the type of the parameter.
   *
   * @param[in]  uuid                            TA to open a session with, as TEE_UUID.
   * @param[in]  wait                            Optional object to wait-on for cancellations.
   * @param[in]  cancellationRequestTimeout      Timeout for automatic request cancellation.
   * @param[in]  paramTypes                      Types of the 4 parameters, 1 byte per parameter.
   * @param[in]  i1                              First input buffer.
   * @param[in]  i2                              Second input buffer.
   * @param[in]  i3                              Third input buffer.
   * @param[in]  i4                              Fourth input buffer.
   * @param[out] o1                              First output buffer.
   * @param[out] o2                              Second output buffer.
   * @param[out] o3                              Third output buffer.
   * @param[out] o4                              Fourth output buffer.
   * @param[in]  imem1                           First optional memory region.
   * @param[in]  imem2                           Second optional memory region.
   * @param[in]  imem3                           Third optional memory region.
   * @param[in]  imem4                           Fourth optional memory region.
   * @param[out] session                         Newly opened session.
   * @param[out] retValue                        GP return value.
   * @param[out] retOrigin                       Where the GP return value originated.
   *
   * @return  Object_OK if successful.
   */
  method openSession(in buffer uuid,
                     in interface wait,
                     in uint32 cancellationRequestTimeout,
                     in uint32 paramTypes,
                     in buffer i1,
                     in buffer i2,
                     in buffer i3,
                     in buffer i4,
                     out buffer o1,
                     out buffer o2,
                     out buffer o3,
                     out buffer o4,
                     in interface imem1,
                     in interface imem2,
                     in interface imem3,
                     in interface imem4,
                     out IGPSession session,
                     out uint32 retValue,
                     out uint32 retOrigin);
};
