// Copyright (c) 2015 Qualcomm Technologies, Inc.  All Rights Reserved.
// Qualcomm Technologies Proprietary and Confidential.

interface IIO {
  /** Offset parameter falls outside the allowable range. */
  error ERROR_OFFSET_OUT_OF_BOUNDS;

  /** Source buffer for write operation larger than allowed. */
  error ERROR_SOURCE_BUFFER_TOO_LARGE;

  /** Parameter buffer length and offset overflow. */
  error ERROR_INVALID_BUFFER_AND_OFFSET;

  /** 
   * Retrieves maximum value for the combination of offset and buffer
   * length for readAtOffset() and writeAtOffset().
   *
   * param[out] len Maximum value for the combination of offset and
   *                buffer length passed to readAtOffset() and
   *                writeAtOffset().
   *
   * @return Object_OK on success
   */
  method getLength(out uint64 len);

  /** 
   * Copies from source at the given offset into the output buffer up
   * to the size of the output buffer.  If the output buffer is larger
   * than the source at the provided offset, the remaining bytes of
   * the output buffer remain unchanged.
   *
   * param[in]  offset The offset to begin reading from the source
   *                   buffer.
   * param[out] data   Destination for copying the source data into.
   *
   * @return Object_OK on success
   */
  method readAtOffset(in uint64 offset, out buffer data);

  /** 
   * Copies into the destination at the given offset up to the size of
   * the parameter buffer.  If the parameter buffer length and offset
   * combine to a greater length than the destination length, an error
   * is returned and no data is copied.
   *
   * param[in] offset The offset to begin writing into the 
   *                  destination.
   * param[in] data   Source of data to copy to destination.
   *
   * @return Object_OK on success
   */
  method writeAtOffset(in uint64 offset, in buffer data);
};
