#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

// Copyright (c) 2017 Qualcomm Technologies, Inc.  All Rights Reserved.

// Qualcomm Technologies Proprietary and Confidential.

/**
 * @brief
 * IOPSSource Interface provides APIs to enforce output protection for
 * DRM protected content.
 *
 */

#define IOPSSource_ERROR_SRM_VERSION_CHECK_FAILED INT32_C(10)
#define IOPSSource_ERROR_INSUFFICIENT_HDCP INT32_C(11)

#define IOPSSource_OP_applyOPL 0

static inline int32_t
IOPSSource_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
IOPSSource_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
IOPSSource_applyOPL(Object self, uint8_t opl_val, uint16_t srmVersion_val, uint8_t *cpl_ptr, uint8_t *dpl_ptr, uint8_t *epl_ptr)
{
  ObjectArg a[2];
  struct {
    uint16_t m_srmVersion;
    uint8_t m_opl;
  } i;
  a[0].b = (ObjectBuf) { &i, 3 };
  struct {
    uint8_t m_cpl;
    uint8_t m_dpl;
    uint8_t m_epl;
  } o;
  a[1].b = (ObjectBuf) { &o, 3 };
  i.m_opl = opl_val;
  i.m_srmVersion = srmVersion_val;

  int32_t result = Object_invoke(self, IOPSSource_OP_applyOPL, a, ObjectCounts_pack(1, 1, 0, 0));

  *cpl_ptr = o.m_cpl;
  *dpl_ptr = o.m_dpl;
  *epl_ptr = o.m_epl;

  return result;
}



