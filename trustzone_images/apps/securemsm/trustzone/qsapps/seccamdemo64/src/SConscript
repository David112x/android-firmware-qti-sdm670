#===============================================================================
#
# App Core
#
# GENERAL DESCRIPTION
#    build script
#
#
#-------------------------------------------------------------------------------
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains schedulerents describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 08/14/17    dr     Port to sdm845
# 01/01/17    dr     Created
#===============================================================================

Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Compiler, object, and linker definitions
#-------------------------------------------------------------------------------


seccam_lib = env.SConscript('${BUILD_ROOT}/apps/securemsm/trustzone/qsapps/seccamlib/src/SConscript', exports='env')
sp_iris_lib = env.SConscript('${BUILD_ROOT}/ssg/securemsm/trustzone/qsapps/libs/sp_iris/build/SConscript', exports='env')

includes = [
  "${BUILD_ROOT}/core/api/services",
  "${BUILD_ROOT}/core/api/kernel/libstd/stringl",
  "${BUILD_ROOT}/core/api/securemsm/trustzone/qsee",
  "${BUILD_ROOT}/apps/securemsm/trustzone/qsapps/seccamlib/inc",
  "${BUILD_ROOT}/ssg/securemsm/trustzone/qsapps/libs/sp_iris/inc",
]

#----------------------------------------------------------------------------
# App core Objects
#----------------------------------------------------------------------------
sources = [
  'app_main.c',
]

if env['PROC'] == 'scorpion':
  app_name = 'seccamdemo'
else:
  app_name = 'seccamdemo64'

libs = [
    seccam_lib,
    sp_iris_lib
]
#-------------------------------------------------------------------------------
# Add metadata to image
#-------------------------------------------------------------------------------
md = {
   'appName':       app_name,
   'privileges':    ['default',
                     'SecureCamera',
                     'SPCOM',
                    ],
   'stackSize':     0x2000,
   'heapSize':      0x9000,

}

app_units = env.SecureAppBuilder(
  sources = sources,
  includes = includes,
  metadata = md,
  user_libs = libs,
  image = app_name,
  deploy_sources = [sources,
                    'SConscript'],
  deploy_variants = env.GetDefaultPublicVariants()
)

op = env.Alias(app_name, app_units)
Return('app_units')
