# DDR_AUX Global config

module : { name = RPMH_DDRAUX_DDR_AUX_SEQ_MEM, group = DDRAUX }
vars:
  # Sequence Memory Commands
  ddr_aux_seq = [
    0x10007022, #   0x0: WAIT4_ARC_CX_PRE_REQ:           WAIT1   arc_cx_prework_req
                #                                        RETURN
    0x10007023, #   0x4: WAIT4_ARC_MX_PRE_REQ:           WAIT1   arc_mx_prework_req
                #                                        RETURN
    0x10007024, #   0x8: WAIT4_ARC_VDDA_PRE_REQ:         WAIT1   arc_vdda_prework_req
                #                                        RETURN
    0x10005022, #   0xc: SEND2_ARC_CX_PRE_ACK:           SET1    arc_cx_prework_ack
                #                                        RETURN
    0x10005023, #  0x10: SEND2_ARC_MX_PRE_ACK:           SET1    arc_mx_prework_ack
                #                                        RETURN
    0x10005024, #  0x14: SEND2_ARC_VDDA_PRE_ACK:         SET1    arc_vdda_prework_ack
                #                                        RETURN
    0x40234022, #  0x18: SEND2_ARC_PRE_NACK:             SET0    arc_cx_prework_ack
                #                                        SET0    arc_mx_prework_ack
    0x10004024, #  0x1c:                                 SET0    arc_vdda_prework_ack
                #                                        RETURN
    0x10007025, #  0x20: WAIT4_ARC_CX_CHG_REQ:           WAIT1   arc_cx_change_req
                #                                        RETURN
    0x10007026, #  0x24: WAIT4_ARC_MX_CHG_REQ:           WAIT1   arc_mx_change_req
                #                                        RETURN
    0x10007027, #  0x28: WAIT4_ARC_VDDA_CHG_REQ:         WAIT1   arc_vdda_change_req
                #                                        RETURN
    0x10005025, #  0x2c: SEND2_ARC_CX_CHG_ACK:           SET1    arc_cx_change_ack
                #                                        RETURN
    0x10005026, #  0x30: SEND2_ARC_MX_CHG_ACK:           SET1    arc_mx_change_ack
                #                                        RETURN
    0x10005027, #  0x34: SEND2_ARC_VDDA_CHG_ACK:         SET1    arc_vdda_change_ack
                #                                        RETURN
    0x10007028, #  0x38: WAIT4_ARC_CX_POST_REQ:          WAIT1   arc_cx_postwork_req
                #                                        RETURN
    0x10007029, #  0x3c: WAIT4_ARC_MX_POST_REQ:          WAIT1   arc_mx_postwork_req
                #                                        RETURN
    0x1000702a, #  0x40: WAIT4_ARC_VDDA_POST_REQ:        WAIT1   arc_vdda_postwork_req
                #                                        RETURN
    0x10005028, #  0x44: SEND2_ARC_CX_POST_ACK:          SET1    arc_cx_postwork_ack
                #                                        RETURN
    0x10005029, #  0x48: SEND2_ARC_MX_POST_ACK:          SET1    arc_mx_postwork_ack
                #                                        RETURN
    0x1000502a, #  0x4c: SEND2_ARC_VDDA_POST_ACK:        SET1    arc_vdda_postwork_ack
                #                                        RETURN
    0x40264025, #  0x50: SEND2_ARC_POST_NACK:            SET0    arc_cx_change_ack
                #                                        SET0    arc_mx_change_ack
    0x21544027, #  0x54:                                 SET0    arc_vdda_change_ack
                #                                        BEQ     cx_vtg_change=0         WAIT4_ARC_MX_POST_REQ0
    0x40286028, #  0x58:                                 WAIT0   arc_cx_postwork_req
                #                                        SET0    arc_cx_postwork_ack
    0x60292115, #  0x5c: WAIT4_ARC_MX_POST_REQ0:         BEQ     mx_vtg_change=0         WAIT4_ARC_VDDA_POST_REQ0
                #                                        WAIT0   arc_mx_postwork_req
    0x21964029, #  0x60:                                 SET0    arc_mx_postwork_ack
                #        WAIT4_ARC_VDDA_POST_REQ0:       BEQ     vdda_vtg_change=0       GOTO_RETURN
    0x402a602a, #  0x64:                                 WAIT0   arc_vdda_postwork_req
                #                                        SET0    arc_vdda_postwork_ack
    0x50031000, #  0x68: GOTO_RETURN:                    RETURN
                #        SENDWAIT2_SHRM_PRE_REQ:         SET1    tcs3_start
    0x70034003, #  0x6c:                                 SET0    tcs3_start
                #                                        WAIT1   tcs3_done
    0x50041000, #  0x70:                                 RETURN
                #        SENDWAIT2_SHRM_CHG_REQ:         SET1    tcs4_start
    0x70044004, #  0x74:                                 SET0    tcs4_start
                #                                        WAIT1   tcs4_done
    0x50051000, #  0x78:                                 RETURN
                #        SENDWAIT2_SHRM_POST_REQ:        SET1    tcs5_start
    0x70054005, #  0x7c:                                 SET0    tcs5_start
                #                                        WAIT1   tcs5_done
    0x50131000, #  0x80:                                 RETURN
                #        GCC_SHRM_FREQUENCY_SWITCH:      SET1    shrm_prework_req
    0x40137015, #  0x84:                                 WAIT1   shrm_prework_ack
                #                                        SET0    shrm_prework_req
    0x70185016, #  0x88:                                 SET1    shrm_change_req
                #                                        WAIT1   shrm_change_ack
    0x50194016, #  0x8c:                                 SET0    shrm_change_req
                #                                        SET1    shrm_postwork_req
    0x4019701b, #  0x90:                                 WAIT1   shrm_postwork_ack
                #                                        SET0    shrm_postwork_req
    0x500e1000, #  0x94:                                 RETURN
                #        COMMON_FREQUENCY_SWITCH:        SET1    generic_gcc_prework_req
    0x702b502b, #  0x98:                                 SET1    tcs6_10_prework_req
                #                                        WAIT1   tcs6_10_prework_ack
    0x700e402b, #  0x9c:                                 SET0    tcs6_10_prework_req
                #                                        WAIT1   generic_gcc_prework_ack
    0x500f400e, #  0xa0:                                 SET0    generic_gcc_prework_req
                #                                        SET1    generic_gcc_change_req
    0x402c502c, #  0xa4:                                 SET1    tcs7_11_change_req
                #                                        SET0    tcs7_11_change_req
    0x700f702c, #  0xa8:                                 WAIT1   tcs7_11_change_ack
                #                                        WAIT1   generic_gcc_change_ack
    0x5010400f, #  0xac:                                 SET0    generic_gcc_change_req
                #                                        SET1    generic_gcc_postwork_req
    0x402d502d, #  0xb0:                                 SET1    tcs8_12_postwork_req
                #                                        SET0    tcs8_12_postwork_req
    0x7010702d, #  0xb4:                                 WAIT1   tcs8_12_postwork_ack
                #                                        WAIT1   generic_gcc_postwork_ack
    0x10004010, #  0xb8:                                 SET0    generic_gcc_postwork_req
                #                                        RETURN
    0x1c1b8002, #  0xbc: GCC_SHUB_FREQUENCY_SWITCH:      MV SEQ_VCD_SEL SHUB
                #                                        CALL    COMMON_FREQUENCY_SWITCH
    0x10001c1e, #  0xc0:                                 CALL    SEQUENCE_DONE
                #                                        RETURN
    0x1c1b8003, #  0xc4: GCC_MC_FREQUENCY_SWITCH:        MV SEQ_VCD_SEL MC
                #                                        CALL    COMMON_FREQUENCY_SWITCH
    0x10001c1e, #  0xc8:                                 CALL    SEQUENCE_DONE
                #                                        RETURN
    0x503f231f, #  0xcc: SEQUENCE_DONE:                  BEQ     perform_mem_test=0   MEMTEST_DONE
                #                                        SET1    dcc_mem_chk_req
    0x0004403f, #  0xd0:                                 SET0    dcc_mem_chk_req
                #                                        DELI    520ns
    0x10008000, #  0xd4: MEMTEST_DONE:                   MV SEQ_VCD_SEL DISABLE
                #                                        RETURN
    0x1c1b8002, #  0xd8: SHUB_MC_FREQUENCY_SWITCH:       MV SEQ_VCD_SEL SHUB
                #                                        CALL    COMMON_FREQUENCY_SWITCH
    0x1c1b8003, #  0xdc:                                 MV SEQ_VCD_SEL MC
                #                                        CALL    COMMON_FREQUENCY_SWITCH
    0x10002b5e, #  0xe0:                                 BEQ     serial_seq_mem_test=1 SEQUENCE_DONE
                #                                        RETURN
    0x1c1b8003, #  0xe4: MC_SHUB_FREQUENCY_SWITCH:       MV SEQ_VCD_SEL MC
                #                                        CALL    COMMON_FREQUENCY_SWITCH
    0x1c1b8002, #  0xe8:                                 MV SEQ_VCD_SEL SHUB
                #                                        CALL    COMMON_FREQUENCY_SWITCH
    0x10002b5e, #  0xec:                                 BEQ     serial_seq_mem_test=1 SEQUENCE_DONE
                #                                        RETURN
    0x50155014, #  0xf0: FREQUENCY_SWITCH_P:             SET1    shub_prework_req     # GCC SHUB Prework Req
                #                                        SET1    mc_prework_req       # GCC MC Prework Req
    0x70065006, #  0xf4:                                 SET1    tcs6_start           # Send Prework SHUB to SHRM
                #                                        WAIT1   tcs6_done            # Wait for SHRM ACK
    0x500a4006, #  0xf8:                                 SET0    tcs6_start
                #                                        SET1    tcs10_start          # Send Prework MC to SHRM
    0x400a700a, #  0xfc:                                 WAIT1   tcs10_done           # Wait for SHRM ACK.
                #                                        SET0    tcs10_start
    0x40147014, # 0x100:                                 WAIT1   shub_prework_ack
                #                                        SET0    shub_prework_req
    0x40157013, # 0x104:                                 WAIT1   mc_prework_ack
                #                                        SET0    mc_prework_req
    0x50185017, # 0x108:                                 SET1    shub_change_req     # GCC Change Req for SHUB
                #                                        SET1    mc_change_req       # GCC Change Req for MC
    0x70075007, # 0x10c:                                 SET1    tcs7_start          # Send Change SHUB to SHRM
                #                                        WAIT1   tcs7_done           # Wait for SHRM ACK
    0x500b4007, # 0x110:                                 SET0    tcs7_start
                #                                        SET1    tcs11_start         # Send Change MC to SHRM
    0x400b700b, # 0x114:                                 WAIT1   tcs11_done          # Wait for SHRM ACK.
                #                                        SET0    tcs11_start
    0x40177017, # 0x118:                                 WAIT1   shub_change_ack
                #                                        SET0    shub_change_req
    0x40187016, # 0x11c:                                 WAIT1   mc_change_ack
                #                                        SET0    mc_change_req
    0x501b501a, # 0x120:                                 SET1    shub_postwork_req
                #                                        SET1    mc_postwork_req
    0x70085008, # 0x124:                                 SET1    tcs8_start          # Send Postwork SHUB to SHRM
                #                                        WAIT1   tcs8_done           # Wait for SHRM ACK
    0x500c4008, # 0x128:                                 SET0    tcs8_start
                #                                        SET1    tcs12_start         # Send Postwork MC to SHRM
    0x400c700c, # 0x12c:                                 WAIT1   tcs12_done          # Wait for SHRM ACK.
                #                                        SET0    tcs12_start
    0x401a701a, # 0x130:                                 WAIT1   shub_postwork_ack
                #                                        SET0    shub_postwork_req
    0x401b7019, # 0x134:                                 WAIT1   mc_postwork_ack
                #                                        SET0    mc_postwork_req
    0x10001c1e, # 0x138:                                 CALL    SEQUENCE_DONE
                #                                        RETURN
    0x40095009, # 0x13c: PWR_COLLAPSE:                   SET1    tcs9_start
                #                                        SET0    tcs9_start
    0x1c237009, # 0x140:                                 WAIT1   tcs9_done
                #                                        CALL    FREQUENCY_SWITCH_P
    0x501e501d, # 0x144:                                 SET1    shub_disable_req
                #                                        SET1    mc_disable_req
    0x701d701c, # 0x148:                                 WAIT1   mc_disable_ack
                #                                        WAIT1   shub_disable_ack
    0x50215020, # 0x14c:                                 SET1    shub_pc_req #initiate shub pc request
                #                                        SET1    mc_pc_req   #initiate mc pc request
    0x40201000, # 0x150:                                 RETURN
                #        RESTORE:                        SET0    shub_pc_req       # clear shub pc request
    0x601f4021, # 0x154:                                 SET0    mc_pc_req         # clear MC pc request 
                #                                        WAIT0   mc_pc_ack         # -WAS Removed while mc_pc_ack is SW overridden
    0x401d6020, # 0x158:                                 WAIT0   shub_pc_ack       # -WAS Removed while shub_pc_ack is SW overridden
                #                                        SET0    shub_disable_req
    0x0002401e, # 0x15c:                                 SET0    mc_disable_req
                #                                        DELI    104ns             #WAIT0   mc_disable_ack - This will be fixed in Napali-V2
    0x1c230008, # 0x160:                                 DELI    15028ns           #WAIT0   shub_disable_ack  # QCTDD03602361 
                #                                        CALL    FREQUENCY_SWITCH_P
    0x400d500d, # 0x164:                                 SET1    tcs13_start
                #                                        SET0    tcs13_start
    0x1c1e700d, # 0x168:                                 WAIT1   tcs13_done
                #                                        CALL    SEQUENCE_DONE
    0x39401000, # 0x16c:                                 RETURN
                #        VOLTAGE_SWITCH:                 BEQR    cx_vtg_change=1         WAIT4_ARC_CX_PRE_REQ
    0x39823901, # 0x170:                                 BEQR    mx_vtg_change=1         WAIT4_ARC_MX_PRE_REQ
                #                                        BEQR    vdda_vtg_change=1       WAIT4_ARC_VDDA_PRE_REQ
    0x3a5a3a17, # 0x174:                                 BEQR    shrm_operational=1      SENDWAIT2_SHRM_PRE_REQ
                #                                        BEQR    shrm_freq_down=1        GCC_SHRM_FREQUENCY_SWITCH
    0x39433be1, # 0x178:                                 BEQR    shrm_clk_off=1          SHRM_CLK_OFF
                #                                        BEQR    cx_vtg_change=1         SEND2_ARC_CX_PRE_ACK
    0x39853904, # 0x17c:                                 BEQR    mx_vtg_change=1         SEND2_ARC_MX_PRE_ACK
                #                                        BEQR    vdda_vtg_change=1       SEND2_ARC_VDDA_PRE_ACK
    0x39083947, # 0x180:                                 BEQR    cx_vtg_change=1         WAIT4_ARC_CX_CHG_REQ
                #                                        BEQR    mx_vtg_change=1         WAIT4_ARC_MX_CHG_REQ
    0x3a183989, # 0x184:                                 BEQR    vdda_vtg_change=1       WAIT4_ARC_VDDA_CHG_REQ
                #                                        BEQR    shrm_operational=1      SENDWAIT2_SHRM_CHG_REQ
    0x390b394a, # 0x188:                                 BEQR    cx_vtg_change=1         SEND2_ARC_CX_CHG_ACK
                #                                        BEQR    mx_vtg_change=1         SEND2_ARC_MX_CHG_ACK
    0x1c06398c, # 0x18c:                                 BEQR    vdda_vtg_change=1       SEND2_ARC_VDDA_CHG_ACK
                #                                        CALL    SEND2_ARC_PRE_NACK
    0x390e394d, # 0x190:                                 BEQR    cx_vtg_change=1         WAIT4_ARC_CX_POST_REQ
                #                                        BEQR    mx_vtg_change=1         WAIT4_ARC_MX_POST_REQ
    0x3a19398f, # 0x194:                                 BEQR    vdda_vtg_change=1       WAIT4_ARC_VDDA_POST_REQ
                #                                        BEQR    shrm_operational=1      SENDWAIT2_SHRM_POST_REQ
    0x39113950, # 0x198:                                 BEQR    cx_vtg_change=1         SEND2_ARC_CX_POST_ACK
                #                                        BEQR    mx_vtg_change=1         SEND2_ARC_MX_POST_ACK
    0x3a9a3992, # 0x19c:                                 BEQR    vdda_vtg_change=1       SEND2_ARC_VDDA_POST_ACK
                #                                        BEQR    shrm_freq_up=1          GCC_SHRM_FREQUENCY_SWITCH
    0x1c133ba0, # 0x1a0:                                 BEQR    shrm_clk_on=1           SHRM_CLK_ON
                #                                        CALL    SEND2_ARC_POST_NACK
    0x1c021000, # 0x1a4:                                 RETURN
                #        VDDA_ONLY_SWITCH:               CALL    WAIT4_ARC_VDDA_PRE_REQ
    0x1c053a17, # 0x1a8:                                 BEQR    shrm_operational=1      SENDWAIT2_SHRM_PRE_REQ
                #                                        CALL    SEND2_ARC_VDDA_PRE_ACK
    0x3a181c09, # 0x1ac:                                 CALL    WAIT4_ARC_VDDA_CHG_REQ
                #                                        BEQR    shrm_operational=1      SENDWAIT2_SHRM_CHG_REQ
    0x1c0f1c0c, # 0x1b0:                                 CALL    SEND2_ARC_VDDA_CHG_ACK
                #                                        CALL    WAIT4_ARC_VDDA_POST_REQ
    0x3a191c06, # 0x1b4:                                 CALL    SEND2_ARC_PRE_NACK
                #                                        BEQR    shrm_operational=1      SENDWAIT2_SHRM_POST_REQ
    0x1c131c12, # 0x1b8:                                 CALL    SEND2_ARC_VDDA_POST_ACK
                #                                        CALL    SEND2_ARC_POST_NACK
    0x401f1000, # 0x1bc:                                 RETURN
                #        SHRM_CLK_ON:                    SET0    shrm_pc_req # initiate shrm pc request
    0x401c6021, # 0x1c0:                                 WAIT0   shrm_pc_ack # WAS Removed while shrm_pc_ack is SW OVERRIDDEN in 
                #                                        SET0    shrm_disable_req
    0x1000601e, # 0x1c4:                                 WAIT0   shrm_disable_ack # WAS - Removed while shrm_disable_ack is SW OVERRIDDEN in 
                #                                        RETURN
    0x701e501c, # 0x1c8: SHRM_CLK_OFF:                   SET1    shrm_disable_req
                #                                        WAIT1   shrm_disable_ack
    0x1000501f, # 0x1cc:                                 SET1    shrm_pc_req #initiate shrm pc request
                #                                        RETURN
    0x10005020, # 0x1d0: SHUB_PC_REQ:                    SET1 shub_pc_req #initiate shub pc request
                #                                        RETURN
    0x10005021, # 0x1d4: MC_PC_REQ:                      SET1 mc_pc_req   #initiate mc pc request
                #                                        RETURN
    0x1000501f, # 0x1d8: SHRM_PC_REQ:                    SET1 shrm_pc_req #initiate shrm pc request
                #                                        RETURN
    0x80021c1a, # 0x1dc: GCC_INIT:                       CALL    GCC_SHRM_FREQUENCY_SWITCH     # Need HW CR#
                #                                        MV SEQ_VCD_SEL SHUB
    0x80031c1b, # 0x1e0:                                 CALL    COMMON_FREQUENCY_SWITCH
                #                                        MV SEQ_VCD_SEL MC
    0x80001c1b, # 0x1e4:                                 CALL    COMMON_FREQUENCY_SWITCH
                #                                        MV SEQ_VCD_SEL DISABLE
    0x00001000, # 0x1e8:                               RETURN
  ]

  # Branch Addresses
  # Branch addr: HWIO_BRANCH_ADDRq_ADDR
  br_address = [
      0x0, #   0x0: WAIT4_ARC_CX_PRE_REQ = 0 BRANCH_REG: 0
      0x4, #   0x4: WAIT4_ARC_MX_PRE_REQ = 4 BRANCH_REG: 1
      0x8, #   0x8: WAIT4_ARC_VDDA_PRE_REQ = 8 BRANCH_REG: 2
      0xc, #   0xc: SEND2_ARC_CX_PRE_ACK = 12 BRANCH_REG: 3
     0x10, #  0x10: SEND2_ARC_MX_PRE_ACK = 16 BRANCH_REG: 4
     0x14, #  0x14: SEND2_ARC_VDDA_PRE_ACK = 20 BRANCH_REG: 5
     0x18, #  0x18: SEND2_ARC_PRE_NACK = 24 BRANCH_REG: 6
     0x20, #  0x1c: WAIT4_ARC_CX_CHG_REQ = 32 BRANCH_REG: 7
     0x24, #  0x20: WAIT4_ARC_MX_CHG_REQ = 36 BRANCH_REG: 8
     0x28, #  0x24: WAIT4_ARC_VDDA_CHG_REQ = 40 BRANCH_REG: 9
     0x2c, #  0x28: SEND2_ARC_CX_CHG_ACK = 44 BRANCH_REG: 10
     0x30, #  0x2c: SEND2_ARC_MX_CHG_ACK = 48 BRANCH_REG: 11
     0x34, #  0x30: SEND2_ARC_VDDA_CHG_ACK = 52 BRANCH_REG: 12
     0x38, #  0x34: WAIT4_ARC_CX_POST_REQ = 56 BRANCH_REG: 13
     0x3c, #  0x38: WAIT4_ARC_MX_POST_REQ = 60 BRANCH_REG: 14
     0x40, #  0x3c: WAIT4_ARC_VDDA_POST_REQ = 64 BRANCH_REG: 15
     0x44, #  0x40: SEND2_ARC_CX_POST_ACK = 68 BRANCH_REG: 16
     0x48, #  0x44: SEND2_ARC_MX_POST_ACK = 72 BRANCH_REG: 17
     0x4c, #  0x48: SEND2_ARC_VDDA_POST_ACK = 76 BRANCH_REG: 18
     0x50, #  0x4c: SEND2_ARC_POST_NACK = 80 BRANCH_REG: 19
     0x5c, #  0x50: WAIT4_ARC_MX_POST_REQ0 = 92 BRANCH_REG: 20
     0x62, #  0x54: WAIT4_ARC_VDDA_POST_REQ0 = 98 BRANCH_REG: 21
     0x68, #  0x58: GOTO_RETURN = 104 BRANCH_REG: 22
     0x6a, #  0x5c: SENDWAIT2_SHRM_PRE_REQ = 106 BRANCH_REG: 23
     0x72, #  0x60: SENDWAIT2_SHRM_CHG_REQ = 114 BRANCH_REG: 24
     0x7a, #  0x64: SENDWAIT2_SHRM_POST_REQ = 122 BRANCH_REG: 25
     0x82, #  0x68: GCC_SHRM_FREQUENCY_SWITCH = 130 BRANCH_REG: 26
     0x96, #  0x6c: COMMON_FREQUENCY_SWITCH = 150 BRANCH_REG: 27
     0xbc, #  0x70: GCC_SHUB_FREQUENCY_SWITCH = 188 BRANCH_REG: 28
     0xc4, #  0x74: GCC_MC_FREQUENCY_SWITCH = 196 BRANCH_REG: 29
     0xcc, #  0x78: SEQUENCE_DONE = 204 BRANCH_REG: 30
     0xd4, #  0x7c: MEMTEST_DONE = 212 BRANCH_REG: 31
    0x1be, #  0x80: SHRM_CLK_ON = 446 BRANCH_REG: 32
    0x1c8, #  0x84: SHRM_CLK_OFF = 456 BRANCH_REG: 33
     0xd8, #  0x88: SHUB_MC_FREQUENCY_SWITCH = 216 BRANCH_REG: 34
     0xf0, #  0x8c: FREQUENCY_SWITCH_P = 240 BRANCH_REG: 35
    0x1d0, #  0x90: SHUB_PC_REQ = 464 BRANCH_REG: 36
    0x1d4, #  0x94: MC_PC_REQ = 468 BRANCH_REG: 37
    0x1d8, #  0x98: SHRM_PC_REQ = 472 BRANCH_REG: 38
  ]

regs:
  SEQ_MEMq = ddr_aux_seq 
  BRANCH_ADDRq = br_address

  SEQ_BRANCH_EVENT = 0x00 # Programmed by AOP - initialize to all 0's, set to 0x100 when SHRM present
  SEQ_GCC_CLKPLAN = 0x0   # Programmed by AOP - initialize to all 0's
  SEQn_CFG = 0x00
  SEQ_VCD_SEL = 0x0
  SEQn_PWR_CTRL_OVRD_BIT_31_TO_0_MASK  = 0x0
  SEQn_PWR_CTRL_OVRD_BIT_63_TO_32_MASK = 0x0
  SEQn_PWR_CTRL_OVRD_BIT_31_TO_0_VAL   = 0x0
  SEQn_PWR_CTRL_OVRD_BIT_63_TO_32_VAL  = 0x0

  SEQn_WAIT_EVENT_BIT_31_TO_0_OVRD_MASK  = 0x00000000    # Override bits 14-33 until we have GCC init (was 0x00000000)
  SEQn_WAIT_EVENT_BIT_31_TO_0_OVRD_VAL   = 0x00000000    # Override bits 14-33 until we have GCC init (was 0x00000000) 

  SEQn_WAIT_EVENT_BIT_63_TO_32_OVRD_MASK = 0x00000000    # Override bits 14-33 until we have GCC init (was 0x00000000)
  SEQn_WAIT_EVENT_BIT_63_TO_32_OVRD_VAL  = 0x00000000    # Override bits 14-33 until we have GCC init (was 0x00000000)

  SEQn_BRANCH_EVENT_OVRD_MASK = 0x0
  SEQn_BRANCH_EVENT_OVRD_VAL = 0x0


module : { name = RPMH_DDRAUX_DDR_AUX_TCS_CFG, group = DDRAUX }
vars:
  default_config = 0x00
  default_cmd = 0x00

regs:
  RSI_TCSm_CFG = default_config  # 0..13  All commands are disabled
  RSI_TCSm_CMDt = default_cmd    # 0..13
  RSI_TCSm_AMC_MODE = [
      0x01, 0x01, 0x01,          # 0-2 are AMC mode
      0x00, 0x00, 0x00, 0x00,    # 3-13 are always TCS mode.
      0x00, 0x00, 0x00, 0x00,    # 3-13 are always TCS mode.
      0x00, 0x00, 0x00           # 3-13 are always TCS mode.
  ]

module : { name = RPMH_DDRAUX_DDR_AUX, group = DDRAUX, last = true }

regs:
  AOP_INTR_MASK = 0x7     # Seq 0 Done, Seq 1 Done, TCS_DONE
                          # Seq Power Control Off
                          # SHRM GPW Off
                          # Summary Interrupt off.

  RSI_TIMEOUT = {
    .THRESHOLD = 0xFFFFF, # Max timeout threshold.
    .ENABLE    = 0x0      # RSI Timeout disabled.
  }

  # Enable DDR_AUX
  DDR_AUX_HW_ENABLE = 0x01
