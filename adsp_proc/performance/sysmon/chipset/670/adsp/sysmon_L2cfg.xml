<!--
.............................................................................
							QoS Registers Start
.............................................................................

.............................................................................
QOS_MODE Register:
This register is used to control various QoS options.
.............................................................................
Bus Mux priority types:
HIGH_PRIORITY_ONLY:     0: Only high priority requests are selected.
HIGH_OVER_LOW_PRIORITY: 1: If low and high eligible requests are available, only high priority request will be selected.
ROUND_ROBIN_PRIORITY:   2: On first Low High collision, High will win. Then alternate between High and Low priorities.
WEIGHTED_ROUND_ROBIN:   3: On first Low High collision, High will win. Then alternate between High and Low priorities at the rate of 3 high to 1 low.

QOS_MODE[1:0]: NORMAL_PRIORITY_BUS_MUX:         Selection policy between eligible high and low priority bus schedulers. Can have any value from "Bus Mux priority types".
QOS_MODE[3:2]: DANGER_PRIORITY_BUS_MUX:         Selection policy between eligible high and low priority bus schedulers when danger asserted. Can have any value from
                                                "Bus Mux priority types".   
QOS_MODE[5:4]: EXTREME_DANGER_PRIORITY_BUS_MUX: Selection policy between eligible high and low priority bus schedulers when extreme danger asserted. Can have any value from
                                                "Bus Mux priority types". 
QOS_MODE[7]:   THREAD_LOW_PRIORITY_FLAG:        enable/disable(1/0) scoreboard watermark low priority.
QOS_MODE[8]:   THREAD_HIGH_PRIORITY_FLAG:       enable/disable(1/0) scoreboard watermark high priority.
QOS_MODE[9]:   THREAD_FETCH_FLAG:               enable/disable(1/0) Scoreboard Watermark L2Fetch.
QOS_MODE[10]:  DANGER_RATE_LIMIT_FLAG:          enable/disable(1/0) danger rate limit.
QOS_MODE[11]:  DANGER_LOW_PRIORITY_STALL_FLAG:  enable/disable(1/0) danger stall of low-priority threads.
QOS_MODE[12]:  DANGER_L2FETCH_STALL_FLAG:       enable/disable(1/0) danger stall of L2Fetch.
QOS_MODE[13]:  BUS_PRIORITY_FLAG:               enable/disable(1/0) bus priority elevation.
QOS_MODE[14]:  DEASSERT_BUS_PRIORITY_FLAG:      De-assert bus priority at time of retirement(1) default is at time of issue (0).
QOS_MODE[15]:  STALL_L2FETCH_FLAG:              enable/disable(1/0) l2fetch stall.
QOS_MODE[16]:  SECONDARY_BUS_STALL_FLAG:        enable/disable(1/0) secondary bus stall.
QOS_MODE[17]:  MAX_TRANSACTIONS_FLAG:           enable/disable(1/0) maximum bus transactions limit.
QOS_MODE[24]:  SLAVE_PRIORITY:                  Slave is high priority (0), Slave is low priority (1).
QOS_MODE[25]:  SLAVE_WRITE_ALLOCATION_POLICY:   Write allocate on aligned 32 or 64, WT on other sizes (0), Always allocate (read allocate) (1).
QOS_MODE[26]:  SLAVE_READ_ALLOCATION_POLICY:    Allocate on read (0), Do not allocate on read (1).
QOS_MODE[28]:  SLAVE_WAY_ALLOCATION_POLICY_01:  Legal to allocate in ways 0 and 1 (0), Do not allocate in ways 0 or 1 (1).
QOS_MODE[29]:  SLAVE_WAY_ALLOCATION_POLICY_23:  Legal to allocate in ways 2 and 3 (0), Do not allocate in ways 2 or 3 (1).
QOS_MODE[30]:  SLAVE_WAY_ALLOCATION_POLICY_45:  Legal to allocate in ways 4 and 5 (0), Do not allocate in ways 4 or 5 (1).
QOS_MODE[31]:  SLAVE_WAY_ALLOCATION_POLICY_67:  Legal to allocate in ways 6 and 7 (0), Do not allocate in ways 6 or 7 (1).


.............................................................................
QOS_MAX_TRANS Register:
This register is used to control the maximum number of outstanding 
transactions on the primary AXI interface.
.............................................................................
QOS_MAX_TRANS[7:0]:    MAXIMUM_READ:                Maximum number of read requests that can be presented to AXI master. Range 1 to 127.  									
QOS_MAX_TRANS[15:8]:   MAXIMUM_NON_PRIORITY_READ:   Maximum number of non-priority read requests that can be presented to AXI master. Range 1 to 127. 
QOS_MAX_TRANS[23:16]:  MAXIMUM_WRITE:               Maximum number of write requests that can be presented to AXI master. Range 1 to 127.                                      
QOS_MAX_TRANS[31:24]:  MAXIMUM_NON_PRIORITY_WRITE:  Maximum number of non-priority write requests that can be presented to AXI master. Range 1 to 127. 


.............................................................................
QOS_ISSUE_RATE Register:
This register is used to specify the rate control for the primary AXI interface.
.............................................................................
QOS_ISSUE_RATE[7:0]:    MAXIMUM_ISSUE_READ:   Maximum issue rate for read requests. Range 0 to 127. Specifies the minimum number of idle clocks (QOS_ISSUE_RATE[7:0] * 8) between 
                                              read requests to AXI primary request FIFO.
QOS_ISSUE_RATE[15:8]:   MAXIMUM_ISSUE_WRITE:  Maximum issue rate for write requests. Range 0 to 127. Specifies the minimum number of idle clocks (QOS_ISSUE_RATE[15:8] * 8) between 
                                              write requests to AXI primary request FIFO.
QOS_ISSUE_RATE[23:16]:  MAXIMUM_ISSUE_LOW:    Maximum issue rate for low priority requests. Range 0 to 127. Specifies the minimum number of idle clocks (QOS_ISSUE_RATE[23:16] * 8) 
                                              between low-priority requests to AXI primary request FIFO.


.............................................................................
QOS_DANGER_ISSUE_RATE Register:
This register is used to specify the rate control for the primary AXI
interface in danger and extreme danger conditions.
.............................................................................
QOS_DANGER_ISSUE_RATE[7:0]:   MAXIMUM_ISSUE_DANGER:          Maximum issue rate for low priority requests in danger. Range 0 to 127. Specifies the minimum number of idle clocks
                                                             (QOS_DANGER_ISSUE_RATE[7:0] * 8) between low-priority requests to AXI primary request FIFO, when in danger and enabled.
QOS_DANGER_ISSUE_RATE[15:8]:  MAXIMUM_ISSUE_EXTREME_DANGER:  Maximum issue rate for all requests in extreme danger. Range 0 to 127. Specifies the minimum number of idle clocks 
                                                             (QOS_DANGER_ISSUE_RATE[15:8] * 8) between any request to AXI primary request FIFO, when in extreme danger and enabled.

                                                             
.............................................................................
QOS_SCOREBOARD_WATERMARK Register:
This register is used to specify the watermark control for reads on the
primary AXI interface.
.............................................................................
QOS_SCOREBOARD_WATERMARK[7:0]:    WATERMARK_L2_FETCH:       When occupancy of scoreboard exceeds watermark, requests from L2Fetch engine are stalled.
QOS_SCOREBOARD_WATERMARK[15:8]:   WATERMARK_LOW_PRIORITY:   When occupancy of scoreboard exceeds watermark, requests from low-priority threads are stalled at the source.
QOS_SCOREBOARD_WATERMARK[23:16]:  WATERMARK_HIGH_PRIORITY:  When occupancy of scoreboard exceeds watermark, requests from high-priority threads are stalled at the source.


.............................................................................
QOS_SYS_PRI Register:
This register is used to specify the system priority settings for the
primary AXI interface.
.............................................................................
QOS_SYS_PRI[2:0]:    PRIORITY_LOW:   Value presented on QSB pins AREQPRIORITY[2:0] for low-priority indication.
QOS_SYS_PRI[18:16]:  PRIORITY_HIGH:  Value presented on QSB pins AREQPRIORITY[2:0] for high-priority indication. 					
                    

.............................................................................
QOS_SLAVE Register:
This register is used to specify limits on the slave, to allow for more
controlled system behavior.
.............................................................................
QOS_SLAVE[7:0]:    MAX_RATE_SLAVE_0:         The minimum number of DSP clocks between aligned 64 byte requests to the L2 pipeline from slave 0.
QOS_SLAVE[13:8]:   MAX_REMASTERING_SLAVE_0:  Maximum number of aligned 64 byte requests being re-mastered that can be presented to the L2 pipeline from slave 0. 0: No limit on the 
                                             re-mastering slave requests. Non-zero: Maximum re-mastering requests that can be presented from the slave.
QOS_SLAVE[23:16]:  MAX_RATE_SLAVE_1:         The minimum number of DSP clocks between aligned 64 byte requests to the L2 pipeline from slave 1.
QOS_SLAVE[29:24]:  MAX_REMASTERING_SLAVE_1:  Maximum number of aligned 64 byte requests being re-mastered that can be presented to the L2 pipeline from slave 1. 0: No limit on the 
                                             re-mastering slave requests. Non-zero: Maximum re-mastering requests that can be presented from slave.

.............................................................................
							QoS Registers End
.............................................................................                                             												
-->

  <register name="BLC_EN" offset="0x10" access="rw">0x1</register>
  <register name="BLC_ADDR" offset="0x14" access="rw">0x0</register>
  <register name="BLC_ADDRMASK" offset="0x18" access="rw">0x0</register>
  <register name="BLC_TXNCNT" offset="0x1C" access="rw">0x0</register>
  <register name="BLC_LATCNT0" offset="0x20" access="rw">0x0</register>
  <register name="BLC_LATCNT1" offset="0x24" access="rw">0x0</register>
  <register name="CCCC_MAPPING_1_0" offset="0x50">0x00140014</register>
  <register name="CCCC_MAPPING_3_2" offset="0x54">0x00040005</register>
  <register name="CCCC_MAPPING_5_4" offset="0x58">0x00140005</register>
  <register name="CCCC_MAPPING_7_6" offset="0x5C">0x00140014</register>
  <register name="CCCC_MAPPING_9_8" offset="0x60">0x00140014</register> 
  <register name="CCCC_MAPPING_B_A" offset="0x64">0x00140014</register>
  <register name="CCCC_MAPPING_D_C" offset="0x68">0x00140004</register>
  <register name="CCCC_MAPPING_F_E" offset="0x6C">0x00140004</register>
  <register name="QOS_MODE" offset="0x100" access="rw">0x00022EBE</register>
  <register name="QOS_MAX_TRANS" offset="0x104" access="rw">0x7F7F7F7F</register>
  <register name="QOS_ISSUE_RATE" offset="0x108" access="rw">0x0</register>
  <register name="QOS_DANGER_ISSUE_RATE" offset="0x10C" access="rw">0x0000041C</register>
  <register name="QOS_SCOREBOARD_WATERMARK" offset="0x110" access="rw">0x001E1010</register>
  <register name="QOS_SYS_PRI" offset="0x114" access="rw">0x00020000</register>
  <register name="QOS_SLAVE" offset="0x118" access="rw">0x0</register>        
