#===============================================================================
#
# Power sleep manager utility
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2017 by Qualcomm Technologies, Inc.
# All Rights Reserved.
# Confidential and Proprietary - Qualcomm Technologies, Inc.
#
#-------------------------------------------------------------------------------
#  $Id: //components/rel/ssc.slpi/3.2/utils/pwr_sleep_mgr/build/pwr_sleep_mgr.scons#1 $
#  $DateTime: 2018/02/01 03:15:18 $
#  $Change: 15367748 $
#
#===============================================================================
Import('env')
import inspect
import os, inspect
#-------------------------------------------------------------------------------
# External dependencies
#-------------------------------------------------------------------------------
CBSP_API = [
  'SERVICES',
  'POWER',
  'DAL',        # for DALSys.h included in npa.h
  'DEBUGTOOLS',
  'KERNEL',
  'SYSTEMDRIVERS',
]

if 'SSC_TARGET_X86' in env['CPPDEFINES']:
  pwr_sleep_mgr_flavor = ["x86"]
elif 'SSC_TARGET_HEXAGON_CORE_SLPI_1_0' in env['CPPDEFINES']:
  pwr_sleep_mgr_flavor = ["hexagon", "hexagon_core_slpi_1.0"]
elif 'SSC_TARGET_HEXAGON_CORE_QDSP6_2_0' in env['CPPDEFINES']:
  pwr_sleep_mgr_flavor = ["hexagon", "hexagon_core_qdsp6_2.0"]
elif 'SSC_TARGET_HEXAGON_MDSP' in env['CPPDEFINES']:
  pwr_sleep_mgr_flavor = ["hexagon", "hexagon_mdsp"]
else:
  Return()

me = inspect.getfile(inspect.currentframe())
my_root = os.path.dirname(os.path.dirname(me))
utils_psm_dir = os.path.join(my_root, 'hexagon_mdsp')
if 'SENSORS_DD_DEV_FLAG' not in env:
  pwr_sleep_cleanpack= []
  if 'SSC_TARGET_HEXAGON_MDSP' not in env['CPPDEFINES']: 
    pwr_sleep_cleanpack += env.FindFiles(['sns_pwr_sleep_mgr_usleep.c'], utils_psm_dir)
  binlib=False
else:
  pwr_sleep_cleanpack=['*.c','*.h']
  binlib=True

#-------------------------------------------------------------------------------
# Adds self
#-------------------------------------------------------------------------------
if 'USES_SSC_STATIC_LIB_BUILDER' in env:
  env.AddSSCSU(inspect.getfile(inspect.currentframe()),
             flavor = pwr_sleep_mgr_flavor,
             core_public_api = CBSP_API,
             ssc_protected_api = ['SNS_FRAMEWORK','SNS_INTERNAL_INCLUDES'],
             clean_pack_list = pwr_sleep_cleanpack,
             binary_lib=binlib,
             island_sections = ['.text.sns', '.data.sns'])

if 'USES_QDSS_SWE' in env:
  QDSS_IMG = ['QDSS_EN_IMG']
  events = [
            ['SNS_PWR_SLEEP_MGR_REMOVE_INSTANCE_START', '', 'F'],
            ['SNS_PWR_SLEEP_MGR_SET_Q6_WAKEUP_INTERVAL_USEC', 'Setting SSC Q6 wakeup interval to %d uS', 'F'],
            ['SNS_PWR_SLEEP_MGR_REMOVE_INSTANCE_END', '', 'F'],
            ['SNS_PWR_SLEEP_MGR_ADD_INSTANCE_START', '', 'F'],
            ['SNS_PWR_SLEEP_MGR_ADD_INSTANCE_END', '', 'F'],
           ]
  env.AddSWEInfo(QDSS_IMG, events)
REMOVE_FILES =  pwr_sleep_cleanpack
env.CleanPack(env['SSC_BUILD_TAGS'], REMOVE_FILES)
