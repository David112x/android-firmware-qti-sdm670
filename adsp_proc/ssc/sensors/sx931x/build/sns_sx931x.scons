#===============================================================================
#
# SX931x sensor build script
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2016-2018 by Qualcomm Technologies, Inc.
# All Rights Reserved.
# Confidential and Proprietary - Qualcomm Technologies, Inc.
#
#-------------------------------------------------------------------------------
#
#  $Id: //components/rel/ssc.slpi/3.2/sensors/sx931x/build/sns_sx931x.scons#3 $
#  $DateTime: 2018/10/24 10:35:56 $
#  $Change: 17448190 $
#
#===============================================================================
Import('env')
import os,inspect

# To add island support for drivers:
# 1. Refactor driver files to separate all island mode functions in a separate
#    file(s) with filenames ending in "_island". See 80-P9361-1 for details.
#    Example: sns_sx931x_hal_island.c
# 2. Use a dedicated environment flag to check if island mode is enabled for the
#    driver. Use format SNS_ISLAND_INCLUDE_<sensor_name>
#    Example: SNS_ISLAND_INCLUDE_LSM6DS3.
# 3. Use this flag to decide whether add_island_files is set to True ot False
#    when env.AddSSCSU() is called.
# 4. Include the flag in build flag options (-f) to enable island mode for
#    the driver.

sx931x_sensor_cnt = 1

if ('SSC_TARGET_HEXAGON_MDSP' in env['CPPDEFINES']):
  Return()

if 'SX931X_ENABLE_DUAL_SENSOR' in env:
  env.Append(CFLAGS = '-DSX931X_ENABLE_DUAL_SENSOR')
  sx931x_sensor_cnt = 2

sx931x_island_enable = False

if 'SNS_ISLAND_INCLUDE_SX931x' in env:
  sx931x_island_enable = True

if ('USES_SSC_STATIC_LIB_BUILDER' in env)  and ('SENSORS_DD_DEV_FLAG' not in env):
  if 'SSC_TARGET_HEXAGON' in env['CPPDEFINES']:
    env.AddSSCSU(inspect.getfile(inspect.currentframe()),
               flavor = ["hexagon"],
               register_func_name = "sns_register_sx931x",
               binary_lib = False,
               add_island_files = sx931x_island_enable,
               registration_cnt = sx931x_sensor_cnt)

if 'SENSORS_DD_DEV_FLAG' in env:
  ME = inspect.getfile(inspect.currentframe())
  MY_ROOT = os.path.dirname(os.path.dirname(ME))
  REMOVE_FILES = env.FindFiles(['*.*'], MY_ROOT)
  env.CleanPack(env['SSC_BUILD_TAGS'], REMOVE_FILES)

