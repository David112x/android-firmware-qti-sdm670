#===============================================================================
#
# uRPMh build script
#
# GENERAL DESCRIPTION
#    Builds the RPMh island driver
#
#    Copyright (c) 2016-2017 Qualcomm Technologies, Inc. (QTI).
#    All Rights Reserved.
#    Qualcomm Confidential and Proprietary.
#    Export of this technology or software is regulated by the U.S. Government.
#    Diversion contrary to U.S. law prohibited.
#-------------------------------------------------------------------------------
#  $Header: //components/rel/core.qdsp6/2.1.c4/power/urpmh/build/urpmh.scons#1 $
#  $DateTime: 2018/07/30 01:21:36 $
#===============================================================================
import os
import stat
import fnmatch
import itertools
import subprocess
from os.path import join, basename, exists

Import('env')
env = env.Clone()

#Do not compile uSleep if target does not support island mode
if 'USES_ISLAND' not in env:
  env.PrintWarning('urpmh is not available for this target.')
  Return()

SRCPATH = ".."
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)


#-------------------------------------------------------------------------------
# Target Checks
#-------------------------------------------------------------------------------
URPMH_TARGET = env['MSM_ID']
URPMH_DIR_ROOT = os.path.join(env['BUILD_ROOT'], 'core/power/urpmh/hal')

# Check if HWIO target directory exists, if not use default target
if not os.path.exists(os.path.join(URPMH_DIR_ROOT, URPMH_TARGET)):
  env.PrintWarning('uRPMh target ' + URPMH_TARGET + ' not found, using default')
  URPMH_TARGET = env['PWR_TARGET_DFLT']

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
  'DAL',
  'DEBUGTOOLS',
  'DEBUGTRACE',
  'MPROC',
  'POWER',
  'SERVICES',
  'SYSTEMDRIVERS',
  'ISLAND_MGR',
  'KERNEL', #needs to be last also contains wrong comdef.h
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)
env.RequireRestrictedApi(['POWER_PDC'])
env.RequireProtectedApi(['POWER_UTILS', 'POWER_RPMh', 'RPMh'])
env.RequirePrivateApi(['RPMh'])

env.PublishPrivateApi('URPMh', [
   '${BUILD_ROOT}/core/power/urpmh/inc',
   '${BUILD_ROOT}/core/power/urpmh/hal/'+ URPMH_TARGET + '/' + env['POWER_SUBSYSTEM'].lower(),
   ]
)
COMMONPATH = os.path.join('..', 'common')

source_patterns = ['*.c']
urpmh_sources = []

#-------------------------------------------------------------------------------
# urpmh sources
#-------------------------------------------------------------------------------
for root, dirnames, filenames in os.walk(COMMONPATH):
    matches = itertools.chain(*[fnmatch.filter(filenames, pattern) for pattern in source_patterns])
    matches = ['${BUILDPATH}' + os.path.join(root, filename)[2:] for filename in matches]
    urpmh_sources.extend(matches)


#-------------------------------------------------------------------------------
# Compile sources and create libraries
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# Global source settings
#-------------------------------------------------------------------------------
MAIN_TAG = ['QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE','CORE_SLPI_ADSP_ROOT']
SENSORS_TAG = ['CORE_QDSP6_SENSOR_SW']
ISLAND_TAG = ['CORE_QDSP6_SW']
urpmh_island_lib = env.AddLibrary(MAIN_TAG, os.path.join('${BUILDPATH}', 'urpmh_island'), urpmh_sources)

#-------------------------------------------------------------------------------
# Add library to island section
#-------------------------------------------------------------------------------
if 'USES_ISLAND' in env:
  env.AddIslandLibrary(ISLAND_TAG, urpmh_island_lib)

