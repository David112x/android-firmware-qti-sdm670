# vi: tw=128 ts=3 sw=3 et :
# @file rcinit_ex.scons
# @brief This file contains the API for the Run Control Framework, API 3.0
#===============================================================================
# NOTE: The @brief description above does not appear in the PDF.
# The tms_mainpage.dox file contains the group/module descriptions that
# are displayed in the output PDF generated using Doxygen and LaTeX. To
# edit or update any of the group/module text in the PDF, edit the
# tms_mainpage.dox file or contact Tech Pubs.
#===============================================================================
#===============================================================================
# Copyright (c) 2015-2016 Qualcomm Technologies, Inc.
# All Rights Reserved.
# Confidential and Proprietary - Qualcomm Technologies, Inc.
#===============================================================================
#===============================================================================
# Edit History
# $Header: //components/rel/core.qdsp6/2.1.c4/debugtools/example/build/rcinit_ex.scons#1 $
# $DateTime: 2018/07/30 01:21:36 $
# $Change: 16759227 $
# $Author: pwbldsvc $
#===============================================================================

# Module Version, Python Standard PEP8, 2001, https://www.python.org/dev/peps/pep-0008/
__version__ = "$Header: //components/rel/core.qdsp6/2.1.c4/debugtools/example/build/rcinit_ex.scons#1 $"

# Shared Library Version, Semantic Versioning 2.0.0, http://semver.org/
__version_info__ = "3.0.0"

Import('env')

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------

env.VariantDir('${BUILDPATH}', '../src', duplicate=0)

#-------------------------------------------------------------------------------
# External Dependency
#-------------------------------------------------------------------------------

#env.RequireExternalApi([
#   'XYZ',
#])

#-------------------------------------------------------------------------------
# Internal Dependency
#-------------------------------------------------------------------------------

env.RequirePublicApi([
   'DAL',
   'TMS',
   'DEBUGTOOLS',
   'DEBUGTRACE',
   'SERVICES',
   'SYSTEMDRIVERS',
   'KERNEL',   # needs to be last also contains wrong comdef.h
])

#-------------------------------------------------------------------------------
# Sources
#-------------------------------------------------------------------------------

RCINIT_EX_COMMON = [
    '${BUILDPATH}/rcinit_ex_initfn.c',
    '${BUILDPATH}/rcinit_ex_policy.c',
]

RCINIT_EX_REX = [
   '${BUILDPATH}/rcinit_ex_rex.c',
]

RCINIT_EX_DAL = [
   '${BUILDPATH}/rcinit_ex_dal.c',
]

RCINIT_EX_QURT = [
   '${BUILDPATH}/rcinit_ex_qurt.c',
]

RCINIT_EX_POSIX = [
   '${BUILDPATH}/rcinit_ex_posix.c',
]

#-------------------------------------------------------------------------------
# Libraries
#-------------------------------------------------------------------------------

BUILD_TAGS = [
   'CORE_APPS', 'CORE_GSS', 'CORE_RPM', 'CORE_VPU', 'CORE_WCN',
   'CORE_MODEM',
   'CORE_QDSP6_QURTOS', 'CORE_QDSP6_QURTOS_USER',
   'CORE_QDSP6_AUDIO_SW', 'CORE_QDSP6_SENSOR_SW', 'CORE_QDSP6_SW',
   'MODEM_MODEM',
]

env.AddLibrary(BUILD_TAGS, '${BUILDPATH}/rcinit_ex', RCINIT_EX_COMMON)

if 'USES_REX' in env:
   env.AddLibrary(BUILD_TAGS, '${BUILDPATH}/rcinit_ex_rex', RCINIT_EX_REX)

if 'USES_DAL' in env:
   env.AddLibrary(BUILD_TAGS, '${BUILDPATH}/rcinit_ex_dal', RCINIT_EX_DAL)

if 'USES_QURT' in env:
   env.AddLibrary(BUILD_TAGS, '${BUILDPATH}/rcinit_ex_qurt', RCINIT_EX_QURT)

if 'USES_POSIX' in env:
   env.AddLibrary(BUILD_TAGS, '${BUILDPATH}/rcinit_ex_posix', RCINIT_EX_POSIX)

#-------------------------------------------------------------------------------
# Optional Policy Extension Function
#-------------------------------------------------------------------------------

# Encouraged use will be at RCINIT_GROUP_3 or later. The policy
# decision impacts 'system' operation, and is not a control that
# is provided to a specific tech area. This implys that only the
# image owner defines the policy for the use case.

#if 'USES_RCINIT' in env:
# env.AddRCInitPolicy(
#  BUILD_TAGS,
#   {
#    'sequence_group'             : 'RCINIT_GROUP_3',
#    'policy_name'                : 'DEFAULT_POLICY',
#    'policy_function'            : 'rcinit_example_policyfn',
#    'policy_optin'               : [ 'default', ], # controls tables created
#   })

#-------------------------------------------------------------------------------
# Task Provisioning Information
#-------------------------------------------------------------------------------

#if 'USES_RCINIT' in env and 'USES_REX' in env: # Kernel Provided Interfaces
#  env.AddRCInitTask(
#   BUILD_TAGS,
#   {
#    'sequence_group'             : 'RCINIT_GROUP_6',
#    'thread_name'                : 'rcinit_exrex',
#    'thread_type'                : 'RCINIT_TASK_REXTASK',
#    'thread_entry'               : 'rcinit_example_rextask',
#    'priority_amss_order'        : 'SHARED_DRIVER_SERVICE_PRI_ORDER', # aka priority_alias
#    'stack_size_bytes'           : '4096',
#    'heap_size_bytes'            : '16384',
#   })

#if 'USES_RCINIT' in env and 'USES_DAL' in env: # Kernel Provided Interfaces
#  env.AddRCInitTask(
#   BUILD_TAGS,
#   {
#    'sequence_group'             : 'RCINIT_GROUP_6',
#    'thread_name'                : 'rcinit_exdal',
#    'thread_type'                : 'RCINIT_TASK_DALTASK',
#    'thread_entry'               : 'rcinit_example_daltask',
#    'priority_amss_order'        : 'SHARED_DRIVER_SERVICE_PRI_ORDER', # aka priority_alias
#    'stack_size_bytes'           : '4096',
#  })

#if 'USES_RCINIT' in env and 'USES_QURT' in env: # Kernel Provided Interfaces
#  env.AddRCInitTask(
#   BUILD_TAGS,
#   {
#    'sequence_group'             : 'RCINIT_GROUP_6',
#    'thread_name'                : 'rcinit_exqurt',
#    'thread_type'                : 'RCINIT_TASK_QURTTASK',
#    'thread_entry'               : 'rcinit_example_qurttask',
#    'priority_amss_order'        : 'SHARED_DRIVER_SERVICE_PRI_ORDER', # aka priority_alias
#    'stack_size_bytes'           : '4096',
#   })

#if 'USES_RCINIT' in env and 'USES_POSIX' in env: # Kernel Provided Interfaces
#  env.AddRCInitTask(
#   BUILD_TAGS,
#   {
#    'sequence_group'             : 'RCINIT_GROUP_6',
#    'thread_name'                : 'rcinit_expthr',
#    'thread_type'                : 'RCINIT_TASK_POSIX',
#    'thread_entry'               : 'rcinit_example_posix',
#    'priority_amss_order'        : 'SHARED_DRIVER_SERVICE_PRI_ORDER', # aka priority_alias
#    'stack_size_bytes'           : '4096',
#   })

#if 'USES_RCINIT' in env:
# env.AddRCInitFunc(
#  BUILD_TAGS,
#  {
#   'sequence_group'             : 'RCINIT_GROUP_6',
#   'init_name'                  : 'rcinit_exifn6',
#   'init_function'              : 'rcinit_example_initfn',
#   'policy_optin'               : [ 'default', 'ftm', ],
#  })

# if 'USES_RCINIT' in env:
# env.AddRCInitFunc(
#  RCINIT_EX_IMG,
#  {
#   'sequence_group'             : 'RCINIT_GROUP_7',
#   'init_name'                  : 'rcinit_exifn7',
#   'init_function'              : 'rcinit_example_initfn',
#   'policy_optin'               : [ 'default', 'ftm', ],
#  })
